{"ast":null,"code":"var _jsxFileName = \"/Users/wxfc/Documents/Code/calculater/calc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Wrapper from './components/Wrapper';\nimport React, { useState } from 'react';\nimport Screen from './components/Screen';\nimport ButtonBox from './components/ButtonBox';\nimport Button from './components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnValues = [[\"C\", \"+-\", \"%\", \"/\"], [7, 8, 9, \"X\"], [4, 5, 6, \"-\"], [1, 2, 3, \"+\"], [0, \".\", \"=\"]];\n\nconst toLocaleString = num => String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\n\nconst removeSpaces = num => num.toString().replace(/\\s/g, \"\");\n\nconst App = () => {\n  _s();\n\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    // the selected sign\n    num: 0,\n    // the entered value\n    res: 0 // the calculated value\n\n  });\n\n  const numClickHandler = e => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    if (removeSpaces(calc.num.length < 16)) {\n      setCalc({ ...calc,\n        num: calc.num === 0 && value === \"0\" ? \"0\" : removeSpaces(calc.num) % 1 === 0 ? toLocaleString(Number(removeSpaces(calc.num + value))) : toLocaleString(calc.num + value),\n        res: !calc.sign ? 0 : calc.res\n      });\n    }\n  };\n\n  const commaClickHandler = e => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n    setCalc({ ...calc,\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num\n    });\n  };\n\n  const signClickHandler = e => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n    setCalc({ ...calc,\n      sign: value,\n      res: !calc.res && calc.num ? calc.num : calc.res,\n      num: 0\n    });\n  };\n\n  const equalsClickHandler = () => {\n    if (calc.sign && calc.num) {\n      const math = (a, b, sign) => sign === \"+\" ? a + b : sign === \"-\" ? a - b : sign === \"X\" ? a * b : a / b;\n\n      setCalc({ ...calc,\n        res: calc.num === \"0\" && calc.sign === \"/\" ? \"can't divide with 0\" : toLocaleString(math(Number(calc.res), Number(calc.num), calc.sign)),\n        sign: \"\",\n        num: 0\n      });\n    }\n  };\n\n  const invertClickHandler = () => {\n    setCalc({ ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\"\n    });\n  };\n\n  const percentClickHandler = () => {\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n    setCalc({ ...calc,\n      num: num /= Math.pow(100, 1),\n      res: res /= Math.pow(100, 1),\n      sign: \"\"\n    });\n  };\n\n  const resetClickHandler = () => {\n    setCalc({ ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      value: calc.num ? calc.num : calc.res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n      children: btnValues.flat().map((btn, i) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: btn === \"=\" ? \"equals\" : \"\",\n          value: btn,\n          onClick: btn === \"C\" ? resetClickHandler : btn === \"+-\" ? invertClickHandler : btn === \"%\" ? percentClickHandler : btn === \"=\" ? equalsClickHandler : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\" ? signClickHandler : btn === \".\" ? commaClickHandler : numClickHandler\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5CdKM1O2CjwY1kYKX7+Xx/YX1Cg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wxfc/Documents/Code/calculater/calc/src/App.js"],"names":["Wrapper","React","useState","Screen","ButtonBox","Button","btnValues","toLocaleString","num","String","replace","removeSpaces","toString","App","calc","setCalc","sign","res","numClickHandler","e","preventDefault","value","target","innerHTML","length","Number","commaClickHandler","includes","signClickHandler","equalsClickHandler","math","a","b","invertClickHandler","percentClickHandler","parseFloat","Math","pow","resetClickHandler","flat","map","btn","i"],"mappings":"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","sourcesContent":["import Wrapper from './components/Wrapper';\nimport React, { useState } from 'react';\nimport Screen from './components/Screen';\nimport ButtonBox from './components/ButtonBox';\nimport Button from './components/Button';\n\nconst btnValues = [\n  [\"C\", \"+-\", \"%\", \"/\"],\n  [7, 8, 9, \"X\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\nconst toLocaleString = (num) =>\n  String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\n\nconst removeSpaces = (num) => num.toString().replace(/\\s/g, \"\");\n\nconst App = () => {\n  \n  let [calc, setCalc] = useState({\n    sign: \"\", // the selected sign\n    num: 0, // the entered value\n    res: 0, // the calculated value\n  })\n\n  const numClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    if (removeSpaces(calc.num.length < 16)) {\n      setCalc({\n        ...calc,\n        num:\n          calc.num === 0 && value === \"0\"\n            ? \"0\"\n            : removeSpaces(calc.num) % 1 === 0\n            ? toLocaleString(Number(removeSpaces(calc.num + value)))\n            : toLocaleString(calc.num + value),\n          res: !calc.sign ? 0 : calc.res,\n      });\n    }\n  };\n\n  const commaClickHandler = (e) => { \n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    setCalc({\n      ...calc,\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num,\n    });\n  };\n  \n  const signClickHandler = (e) => { \n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    setCalc({\n      ...calc,\n      sign: value,\n      res: !calc.res && calc.num ? calc.num : calc.res,\n      num: 0,\n    });\n  }; \n\n  const equalsClickHandler = () => {\n    if (calc.sign && calc.num) {\n      const math = (a, b, sign) =>\n        sign === \"+\"\n        ? a + b\n        : sign === \"-\"\n        ? a - b\n        : sign === \"X\"\n        ? a * b\n        : a / b;\n\n      setCalc({\n        ...calc,\n        res:\n          calc.num === \"0\" && calc.sign === \"/\"\n            ? \"can't divide with 0\"\n            : toLocaleString(\n              math(\n                Number(calc.res), \n                Number(calc.num), \n                calc.sign\n              )\n            ),\n        sign: \"\",\n        num: 0,\n      })\n    }\n  }\n\n  const invertClickHandler = () => {\n    setCalc({\n      ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\",\n    });\n  }\n\n  const percentClickHandler = () => { \n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n\n    setCalc({\n      ...calc,\n      num: (num /= Math.pow(100, 1)),\n      res: (res /= Math.pow(100, 1)),\n      sign: \"\",\n    });\n  }\n\n  const resetClickHandler = () => { \n    setCalc({ \n      ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0,\n    });\n  };\n\n\n\n  return (\n    <Wrapper>\n      <Screen value={calc.num ? calc.num : calc.res} />\n      <ButtonBox>\n        {\n          btnValues.flat().map((btn, i) => {\n            return (\n              <Button\n                key={i}\n                className={btn === \"=\" ? \"equals\" : \"\"}\n                value={btn}\n                onClick={\n                  btn === \"C\"\n                  ? resetClickHandler\n                  : btn === \"+-\"\n                  ? invertClickHandler\n                  : btn === \"%\"\n                  ? percentClickHandler\n                  : btn === \"=\"\n                  ? equalsClickHandler\n                  : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\n                  ? signClickHandler\n                  : btn === \".\"\n                  ? commaClickHandler\n                  : numClickHandler\n                }\n              />\n            );\n          })\n        } \n      </ButtonBox>\n    </Wrapper>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}